// LighTTS sound-map source file. Auto-Generated by generate_sounds.rb
// The script to generate this was created by D.Bailey (Xasin), 30.07.2019

#include "soundMap.h"

using namespace Xasin::Peripheral;

namespace Xasin {
namespace LighTTS {

#include "audio_headers/0.h"
#include "audio_headers/1.h"
#include "audio_headers/10.h"
#include "audio_headers/2.h"
#include "audio_headers/20.h"
#include "audio_headers/3.h"
#include "audio_headers/30.h"
#include "audio_headers/4.h"
#include "audio_headers/40.h"
#include "audio_headers/5.h"
#include "audio_headers/50.h"
#include "audio_headers/6.h"
#include "audio_headers/60.h"
#include "audio_headers/7.h"
#include "audio_headers/70.h"
#include "audio_headers/8.h"
#include "audio_headers/80.h"
#include "audio_headers/9.h"
#include "audio_headers/90.h"
#include "audio_headers/milli.h"
#include "audio_headers/micro.h"
#include "audio_headers/hundred.h"
#include "audio_headers/thousand.h"
#include "audio_headers/million.h"
#include "audio_headers/point.h"
#include "audio_headers/minus.h"
#include "audio_headers/all.h"
#include "audio_headers/system.h"
#include "audio_headers/hovercraft.h"
#include "audio_headers/dskorder.h"
#include "audio_headers/lasertag.h"
#include "audio_headers/battery.h"
#include "audio_headers/internet.h"
#include "audio_headers/connected.h"
#include "audio_headers/dis.h"
#include "audio_headers/connecting.h"
#include "audio_headers/low.h"
#include "audio_headers/high.h"
#include "audio_headers/normal.h"
#include "audio_headers/over.h"
#include "audio_headers/under.h"
#include "audio_headers/initiating.h"
#include "audio_headers/self.h"
#include "audio_headers/destruct.h"
#include "audio_headers/charged.h"
#include "audio_headers/current.h"
#include "audio_headers/voltage.h"
#include "audio_headers/ping.h"
#include "audio_headers/time.h"
#include "audio_headers/volts.h"
#include "audio_headers/ampere.h"
#include "audio_headers/percent.h"
#include "audio_headers/seconds.h"
#include "audio_headers/minutes.h"
#include "audio_headers/error.h"
#include "audio_headers/success.h"
#include "audio_headers/aborted.h"
#include "audio_headers/at.h"
#include "audio_headers/to.h"
#include "audio_headers/target.h"
#include "audio_headers/is.h"
#include "audio_headers/remaining.h"
#include "audio_headers/hello.h"
#include "audio_headers/augustin.h"


const std::map<std::string, audio_samp_t> lightts_available_samples = {
	{"0", {lightts_audiosample_0, sizeof(lightts_audiosample_0)}},
	{"1", {lightts_audiosample_1, sizeof(lightts_audiosample_1)}},
	{"10", {lightts_audiosample_10, sizeof(lightts_audiosample_10)}},
	{"2", {lightts_audiosample_2, sizeof(lightts_audiosample_2)}},
	{"20", {lightts_audiosample_20, sizeof(lightts_audiosample_20)}},
	{"3", {lightts_audiosample_3, sizeof(lightts_audiosample_3)}},
	{"30", {lightts_audiosample_30, sizeof(lightts_audiosample_30)}},
	{"4", {lightts_audiosample_4, sizeof(lightts_audiosample_4)}},
	{"40", {lightts_audiosample_40, sizeof(lightts_audiosample_40)}},
	{"5", {lightts_audiosample_5, sizeof(lightts_audiosample_5)}},
	{"50", {lightts_audiosample_50, sizeof(lightts_audiosample_50)}},
	{"6", {lightts_audiosample_6, sizeof(lightts_audiosample_6)}},
	{"60", {lightts_audiosample_60, sizeof(lightts_audiosample_60)}},
	{"7", {lightts_audiosample_7, sizeof(lightts_audiosample_7)}},
	{"70", {lightts_audiosample_70, sizeof(lightts_audiosample_70)}},
	{"8", {lightts_audiosample_8, sizeof(lightts_audiosample_8)}},
	{"80", {lightts_audiosample_80, sizeof(lightts_audiosample_80)}},
	{"9", {lightts_audiosample_9, sizeof(lightts_audiosample_9)}},
	{"90", {lightts_audiosample_90, sizeof(lightts_audiosample_90)}},
	{"milli", {lightts_audiosample_milli, sizeof(lightts_audiosample_milli)}},
	{"micro", {lightts_audiosample_micro, sizeof(lightts_audiosample_micro)}},
	{"hundred", {lightts_audiosample_hundred, sizeof(lightts_audiosample_hundred)}},
	{"thousand", {lightts_audiosample_thousand, sizeof(lightts_audiosample_thousand)}},
	{"million", {lightts_audiosample_million, sizeof(lightts_audiosample_million)}},
	{"point", {lightts_audiosample_point, sizeof(lightts_audiosample_point)}},
	{"minus", {lightts_audiosample_minus, sizeof(lightts_audiosample_minus)}},
	{"all", {lightts_audiosample_all, sizeof(lightts_audiosample_all)}},
	{"system", {lightts_audiosample_system, sizeof(lightts_audiosample_system)}},
	{"hovercraft", {lightts_audiosample_hovercraft, sizeof(lightts_audiosample_hovercraft)}},
	{"dskorder", {lightts_audiosample_dskorder, sizeof(lightts_audiosample_dskorder)}},
	{"lasertag", {lightts_audiosample_lasertag, sizeof(lightts_audiosample_lasertag)}},
	{"battery", {lightts_audiosample_battery, sizeof(lightts_audiosample_battery)}},
	{"internet", {lightts_audiosample_internet, sizeof(lightts_audiosample_internet)}},
	{"connected", {lightts_audiosample_connected, sizeof(lightts_audiosample_connected)}},
	{"dis", {lightts_audiosample_dis, sizeof(lightts_audiosample_dis)}},
	{"connecting", {lightts_audiosample_connecting, sizeof(lightts_audiosample_connecting)}},
	{"low", {lightts_audiosample_low, sizeof(lightts_audiosample_low)}},
	{"high", {lightts_audiosample_high, sizeof(lightts_audiosample_high)}},
	{"normal", {lightts_audiosample_normal, sizeof(lightts_audiosample_normal)}},
	{"over", {lightts_audiosample_over, sizeof(lightts_audiosample_over)}},
	{"under", {lightts_audiosample_under, sizeof(lightts_audiosample_under)}},
	{"initiating", {lightts_audiosample_initiating, sizeof(lightts_audiosample_initiating)}},
	{"self", {lightts_audiosample_self, sizeof(lightts_audiosample_self)}},
	{"destruct", {lightts_audiosample_destruct, sizeof(lightts_audiosample_destruct)}},
	{"charged", {lightts_audiosample_charged, sizeof(lightts_audiosample_charged)}},
	{"current", {lightts_audiosample_current, sizeof(lightts_audiosample_current)}},
	{"voltage", {lightts_audiosample_voltage, sizeof(lightts_audiosample_voltage)}},
	{"ping", {lightts_audiosample_ping, sizeof(lightts_audiosample_ping)}},
	{"time", {lightts_audiosample_time, sizeof(lightts_audiosample_time)}},
	{"volts", {lightts_audiosample_volts, sizeof(lightts_audiosample_volts)}},
	{"ampere", {lightts_audiosample_ampere, sizeof(lightts_audiosample_ampere)}},
	{"percent", {lightts_audiosample_percent, sizeof(lightts_audiosample_percent)}},
	{"seconds", {lightts_audiosample_seconds, sizeof(lightts_audiosample_seconds)}},
	{"minutes", {lightts_audiosample_minutes, sizeof(lightts_audiosample_minutes)}},
	{"error", {lightts_audiosample_error, sizeof(lightts_audiosample_error)}},
	{"success", {lightts_audiosample_success, sizeof(lightts_audiosample_success)}},
	{"aborted", {lightts_audiosample_aborted, sizeof(lightts_audiosample_aborted)}},
	{"at", {lightts_audiosample_at, sizeof(lightts_audiosample_at)}},
	{"to", {lightts_audiosample_to, sizeof(lightts_audiosample_to)}},
	{"target", {lightts_audiosample_target, sizeof(lightts_audiosample_target)}},
	{"is", {lightts_audiosample_is, sizeof(lightts_audiosample_is)}},
	{"remaining", {lightts_audiosample_remaining, sizeof(lightts_audiosample_remaining)}},
	{"hello", {lightts_audiosample_hello, sizeof(lightts_audiosample_hello)}},
	{"augustin", {lightts_audiosample_augustin, sizeof(lightts_audiosample_augustin)}},
};
}
}