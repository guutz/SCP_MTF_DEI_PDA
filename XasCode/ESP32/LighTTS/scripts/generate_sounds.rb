

$soundlist = Array.new();

10.times do |i|
	$soundlist << i;
	$soundlist << 10*i;
end

$soundlist << ["milli", "micro", "hundred", "thousand", "million", "point", "minus"]

$soundlist << ["all", "system", "hovercraft", "dskorder", "lasertag", "battery", "internet"];

$soundlist << ["connected", "dis", "connecting"]
$soundlist << ["low", "high", "normal", "over", "under"]

$soundlist << ["initiating", "self", "destruct"]

$soundlist << ["charged"]
$soundlist << ["current", "voltage", "ping", "time"]
$soundlist << ["volts", "ampere", "percent", "seconds", "minutes"]

$soundlist << ["error", "success", "aborted"]

$soundlist << ["at", "to", "target", "is", "remaining"]

$soundlist << ["hello", "augustin"]

$soundlist.flatten!()
$soundlist.uniq!

print "Generating raw sound files ...\n At number: 0\r"

soundI = 0;
$soundlist.each do |soundText|
	`espeak -w ../raw_wav/#{soundText}_unscaled.wav "#{soundText}"`
	`sox -b 16 "../raw_wav/#{soundText}_unscaled.wav" "../raw_wav/#{soundText}.wav" channels 1 pitch -30 rate 5510 silence 1 0.03 0.2% reverse silence 1 0.03 0.2% reverse`
	`rm ../raw_wav/#{soundText}_unscaled.wav`

	soundI += 1;
	print "At number: #{soundI}\r"
end

print "Done generating sound files.\nConverting to headers!\n"

soundI = 0;
$soundlist.each do |soundText|
	`cp ../raw_wav/#{soundText}.wav audio.wav`
	`python $IDF_PATH/examples/peripherals/i2s_adc_dac/tools/generate_audio_file.py`
	`rm audio.wav`

	`sed -i 's/audio_table/lightts_audiosample_#{soundText}/g' audio_example_file.h`
	`mv audio_example_file.h ../audio_headers/#{soundText}.h`

	soundI += 1;
	print "At number: #{soundI}\r"
end

print "Done converting to headers.\nGenerating source file!\n"

File.open("../soundMap.cpp", "w") do |sourcefile|

sourcefile.print <<'EOH'
// LighTTS sound-map source file. Auto-Generated by generate_sounds.rb
// The script to generate this was created by D.Bailey (Xasin), 30.07.2019

#include "soundMap.h"

using namespace Xasin::Peripheral;

namespace Xasin {
namespace LighTTS {

EOH

	$soundlist.each do |soundText|
		sourcefile.print("#include \"audio_headers/#{soundText}.h\"\n");
	end

	sourcefile.print("\n\nconst std::map<std::string, audio_samp_t> lightts_available_samples = {\n")

	$soundlist.each do |sT|
		sourcefile.print("	{\"#{sT}\", {lightts_audiosample_#{sT}, sizeof(lightts_audiosample_#{sT})}},\n");
	end

	sourcefile.print("};\n}\n}");
end
